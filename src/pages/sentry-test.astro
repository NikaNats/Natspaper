---
import Layout from "@/layouts/Layout.astro";
---

<Layout title="Sentry Test Page">
  <main>
    <h1>Sentry Error Monitoring Test</h1>
    <p>
      Use the buttons below to test Sentry error tracking. Errors will be sent
      to your Sentry dashboard.
    </p>

    <section>
      <h2>Test Buttons</h2>

      <button id="error-button" class="btn btn-error">
        üî¥ Throw Test Error
      </button>

      <button id="message-button" class="btn btn-info">
        üìù Send Test Message
      </button>

      <button id="context-button" class="btn btn-warning">
        üìä Test with Context
      </button>

      <button id="check-status" class="btn btn-success">
        ‚úÖ Check Sentry Status
      </button>
    </section>

    <section id="status" style="margin-top: 2rem; padding: 1rem; background: #f0f0f0; border-radius: 8px; display: none;">
      <h3>Sentry Status</h3>
      <pre id="status-output"></pre>
    </section>
  </main>

  <script>
    function handleThrowError() {
      throw new Error("This is a test error from Sentry test page!");
    }

    async function handleSendMessage() {
      const { captureMessage } = await import("@sentry/astro");
      captureMessage("Test message from Sentry test page", "info");
      alert("Message sent to Sentry!");
    }

    async function handleTestContext() {
      const { captureException } = await import("@sentry/astro");
      try {
        throw new Error("Test error with custom context");
      } catch (error) {
        captureException(error, {
          tags: {
            testPage: "sentry-test",
            component: "TestButtons",
          },
          contexts: {
            testInfo: {
              timestamp: new Date().toISOString(),
              userAgent: navigator.userAgent,
            },
          },
        });
      }
      alert("Context error sent to Sentry!");
    }

    function handleCheckStatus() {
      const statusDiv = document.getElementById("status");
      const statusOutput = document.getElementById("status-output");

      if (!statusDiv || !statusOutput) {
        // eslint-disable-next-line no-console
        console.error("Status elements not found");
        return;
      }

      const dsn = import.meta.env.PUBLIC_SENTRY_DSN;
      const sentryEnabled = !!dsn;

      const status = {
        sentryEnabled,
        dsn: sentryEnabled ? dsn.split("@")[0] + "@***" : "Not configured",
        environment: import.meta.env.MODE,
        timestamp: new Date().toISOString(),
      };

      statusOutput.textContent = JSON.stringify(status, null, 2);
      statusDiv.style.display = "block";

      if (sentryEnabled) {
        // eslint-disable-next-line no-console
        console.log("‚úÖ Sentry is enabled and ready!");
      } else {
        // eslint-disable-next-line no-console
        console.warn("‚ö†Ô∏è Sentry is not configured. Add PUBLIC_SENTRY_DSN to .env");
      }
    }

    document
      .getElementById("error-button")
      ?.addEventListener("click", handleThrowError);
    document
      .getElementById("message-button")
      ?.addEventListener("click", handleSendMessage);
    document
      .getElementById("context-button")
      ?.addEventListener("click", handleTestContext);
    document
      .getElementById("check-status")
      ?.addEventListener("click", handleCheckStatus);
  </script>

  <style>
    main {
      max-width: 800px;
      margin: 0 auto;
      padding: 2rem;
    }

    section {
      margin: 2rem 0;
    }

    .btn {
      display: inline-block;
      padding: 0.75rem 1.5rem;
      margin: 0.5rem;
      border: none;
      border-radius: 4px;
      font-size: 1rem;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .btn-error {
      background-color: #dc2626;
      color: white;
    }

    .btn-error:hover {
      background-color: #b91c1c;
      transform: scale(1.05);
    }

    .btn-info {
      background-color: #0ea5e9;
      color: white;
    }

    .btn-info:hover {
      background-color: #0284c7;
      transform: scale(1.05);
    }

    .btn-warning {
      background-color: #f59e0b;
      color: white;
    }

    .btn-warning:hover {
      background-color: #d97706;
      transform: scale(1.05);
    }

    .btn-success {
      background-color: #10b981;
      color: white;
    }

    .btn-success:hover {
      background-color: #059669;
      transform: scale(1.05);
    }

    pre {
      background: #1f2937;
      color: #e5e7eb;
      padding: 1rem;
      border-radius: 4px;
      overflow-x: auto;
      font-size: 0.875rem;
      line-height: 1.5;
    }
  </style>
</Layout>
